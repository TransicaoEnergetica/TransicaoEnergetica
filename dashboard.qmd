---
title: "Dashboard da Transição Energética"
format: 
  dashboard:
    nav-buttons: [github]
    github: https://github.com/
logo: images/logo.png
theme: [sandstone, theme/custom.scss]
fig-width: 10
fig-asp: 0.3
editor_options: 
  chunk_output_type: console
---

# Transição Energética

## {.sidebar}

```{r}
#| label: load-packages
#| message: false
#| context: setup
library(tidyverse)
library(gt)
library(dplyr)
library(ggplot2)
library(purrr)
library(ggiraph)
library(htmltools)
library(reactable)
theme_set(theme_minimal(base_size = 24, base_family = "Atkinson Hyperlegible"))
ld <- readxl::read_excel("data/ger_energ_40_30-04-24.xlsx")
ld <- ld %>% select(-tipo_geracao_bak)

```

```{r}
div(
  div('Paises', style = 'font-weight:600'),
  purrr::map(
    unique(ld$pais), 
    \(x) tags$input(
      type = 'checkbox',
      name = 'checkboxes',
      checked = 'checked',
      value = x,
      x
    )
  ),
  onchange = reactable::JS(
          "Reactable.setFilter(
            'ldl',
            'pais',
            function() {
              checkboxes = document.querySelectorAll('input[name=\"checkboxes\"]');
              return Array.from(checkboxes)
                .filter(function(checkbox) {
                  return checkbox.checked;
                })
                .map(function(checkbox) {
                  return checkbox.value;
                });
            }
          )
          "
  )
)

```


## Main Body

### First row

::: {.card width="30%"}

```{r}
ld |>
  reactable(
    columns = list(
      pais = colDef(
        name = "pais",
        filterMethod = reactable::JS("
          function(rows, columnId, filterValue) {
            return filterValue.length === 0 ? rows : rows.filter(
              (row) => {
                return filterValue.includes(row.values[columnId])
              }
            )
          }
          "
        )
      ),
      tipo_geracao = colDef(
        name = "tipo_geracao",
        align = "right",
        format = colFormat(
          digits = 0,
          suffix = 'g'
        )
      ),
      Ano = colDef(
        name = "Ano",
        align = "right",
        format = colFormat(
          digits = 0,
          suffix = 'g'
        )
      ),
      BKWH = colDef(
        name = "BKWH",
        align = "right",
        format = colFormat(
          digits = 0,
          suffix = 'g'
        )
      ),
    ),
    columnGroups = list(
      colGroup(
        name = "Dados dos Paises",
        columns = c("pais", "tipo_geracao", "Ano", "BKWH")
      )
    ),
    defaultPageSize = 3,
    elementId = "ldl",
  )
```

:::
